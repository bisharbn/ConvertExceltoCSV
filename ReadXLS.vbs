'===================================================================
' Tutorial 36
'
' This tutorial shows how to read an Excel XLSX file in VBScript
' (the XLSX file generated by Tutorial 04 as base template), modify
' some data and save it to another XLSX file (Tutorial36.xlsx).
'===================================================================

'C:\Data\VBA\Test VBS\test.xls
WScript.StdOut.WriteLine("Tutorial 36" & vbcrlf & "-----------" & vbcrlf)

' Create an instance of the class that reads Excel files
Set workbook = CreateObject("EasyXLS.ExcelDocument")

' Read XLSX file
WScript.StdOut.WriteLine("Reading file: C:\Data\VBA\Test VBS\test.xls" & vbcrlf)
If (workbook.easy_LoadXLSXFile("C:\Data\VBA\Test VBS\test.xls")) Then

    ' Get the table of data for the second worksheet
    Set xlsSecondTable = workbook.easy_getSheet("Second tab").easy_getExcelTable()

    ' Write some data to the second sheet
    xlsSecondTable.easy_getCell_2("A1").setValue("Data added by Tutorial36")

    For column=0 To 4
        xlsSecondTable.easy_getCell(1, column).setValue("Data " & (column + 1))
    Next

    ' Export the new XLSX file
    Wscript.StdOut.WriteLine(vbcrlf & "Writing file: C:\Data\VBA\Test VBS\testout.xls")
    workbook.easy_WriteXLSXFile ("C:\Data\VBA\Test VBS\testout.xls")

    ' Confirm export of Excel file
    Dim sError
    sError = workbook.easy_getError()
    If sError = "" Then
        WScript.StdOut.WriteLine(vbcrlf & "File successfully created.")
    Else
        WScript.StdOut.WriteLine(vbcrlf & "Error: " & sError)
    End If    
Else
    Wscript.StdOut.WriteLine("Error reading file C:\Data\VBA\Test VBS\test.xls" & vbcrlf & _ 
                             workbook.easy_getError())
End If

' Dispose memory
workbook.Dispose

Wscript.StdOut.Write(vbcrlf & "Press Enter to exit ...")
Wscript.StdIn.ReadLine()

